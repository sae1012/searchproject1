import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from config import token
import json

bot = telebot.TeleBot(token=token)

projects = {}
profiles = {}
users = []

try:
    with open('file.json', 'w') as file:
        users = json.loads(file.read())
except:
    users = []
try:
    with open('file.json', 'w') as file:
        projects = json.loads(file.read())
except:
    projects = {}
try:
    with open('file.json', 'w') as file:
        profiles = json.loads(file.read())
except:
    profiles = {}

def create_empty_profile():
    return {
        "name": "",
        "class": "",
        "technologies": [],
        "interests" : []
    }


def create_empty_project():
    return {
        "name": "",
        "class": "",
        "languages": [],
        "idea" : []
    }


@bot.message_handler(commands=['start'])
def send_menu(user_id):
    keyboard = ReplyKeyboardMarkup()
    keyboard.add(KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—é–º–µ üëÄ"))
    keyboard.add(KeyboardButton('–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ‚úíÔ∏è'))
    keyboard.add(KeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ ‚úíÔ∏è'))
    keyboard.add(KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã üëÄ'))
    bot.send_message(user_id.chat.id, "–ß—Ç–æ —Ö–æ—á–µ—à—å?", reply_markup=keyboard)



def receive_name(message):
    profiles[message.from_user.id]['name'] = message.text
    msg = bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º —Ç—ã –∫–ª–∞—Å—Å–µ?")
    bot.register_next_step_handler(msg, receive_class)


def receive_class(message):
    profiles[message.from_user.id]['class'] = message.text
    msg = bot.send_message(message.chat.id, "–ö–∞–∫–∏–µ —è–∑—ã–∫–∏ —Ç—ã –∑–Ω–∞–µ—à—å? –ù–∞–ø–∏—à–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é...")
    bot.register_next_step_handler(msg, receive_technologies)


def receive_technologies(message):
    technologies = list(map(lambda x: x.strip(), message.text.split(',')))
    profiles[message.from_user.id]['technologies'] = technologies
    msg = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ –æ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Öü§î")
    bot.register_next_step_handler(msg, receive_interests)
    
def receive_interests(message):
    interests = list(map(lambda x: x.strip(), message.text.split(',')))
    profiles[message.from_user.id]['interests'] = interests
    send_menu(message.chat.id)

    

@bot.message_handler(content_types=['text'])
def process_message(message):
    if message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—é–º–µ üëÄ":
        for user_id in profiles:
            profile = profiles[user_id]
            resume = f"–ò–º—è: {profile['name']}\n–ö–ª–∞—Å—Å: {profile['class']}\n–ù–∞–≤—ã–∫–∏: {', '.join(profile['technologies'])}\n–ò–Ω—Ç–µ—Ä–µ—Å—ã: {', '.join(profile['interests'])}"
            bot.send_message(message.chat.id, resume)
    if message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–µ–∫—Ç—ã üëÄ":
        for user_id in projects:
            project = projects[user_id]
            resume2 = f"–ò–º—è: {project['name']}\n–ö–ª–∞—Å—Å: {project['class']}\n–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞–≤—ã–∫–∏: {', '.join(project['languages'])}\n–ò–¥–µ—è –ø—Ä–æ–µ–∫—Ç–∞: {', '.join(project['idea'])}"
            bot.send_message(message.chat.id, resume2)
    if message.text == "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ‚úíÔ∏è":
        projects[message.from_user.id] = create_empty_profile()
        msg = bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(msg, receive_name_project)
    if message.text == "–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑—é–º–µ ‚úíÔ∏è":
        profiles[message.from_user.id] = create_empty_profile()
        msg = bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(msg, receive_name)


def receive_name_project(message):
    projects[message.from_user.id]['name'] = message.text
    msg = bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–º —Ç—ã –∫–ª–∞—Å—Å–µ?")
    bot.register_next_step_handler(msg, receive_class_project)


def receive_class_project(message):
    projects[message.from_user.id]['class'] = message.text
    msg = bot.send_message(message.chat.id, "–ö–∞–∫–∏–µ —è–∑—ã–∫–∏ —Ç—ã –±—É–¥–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞? –ù–∞–ø–∏—à–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é...")
    bot.register_next_step_handler(msg, receive_languages_project)


def receive_languages_project(message):
    languages = list(map(lambda x: x.strip(), message.text.split(',')))
    projects[message.from_user.id]['languages'] = languages
    msg = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –µ–≥–æ —Å—É—Ç–∏ü§î")
    bot.register_next_step_handler(msg, receive_idea_project)
    
def receive_idea_project(message):
    idea = list(map(lambda x: x.strip(), message.text.split(',')))
    projects[message.from_user.id]['idea'] = idea
    send_menu(message)


bot.polling(non_stop=True)
